{% extends 'base.html.twig' %}

{% block title %}Hello ProfileController!{% endblock %}

{% block body %}

{{ form_start(form) }}

<div class="container mx-auto py-8 flex flex-col xl:flex-row justify-evenly">
    <div class="bg-white rounded-lg shadow dark:border md:mt-0 xl:p-0 dark:bg-white/10 backdrop-blur-2xl dark:border-gray-700 p-5 md:w-full mx-auto xl:ml-20 mb-2 xl:mb-0 xl:mr-5" action="{{ path('app_profile_edit') }}" method="POST" enctype="multipart/form-data">
        <div class="p-6 space-y-4 md:space-y-6 sm:p-8">
            <h1
                class="text-xl font-bold leading-tight tracking-tight text-gray-900 md:text-2xl dark:text-white">
                Edit your account
            </h1>

            <!-- flashes -->
            {% for message in app.flashes('success') %}
                <div class="alert alert-success px-4 py-3 rounded relative" role="alert">
                    <strong class="font-bold">Success !</strong>
                    <span class="block sm:inline">{{ message }}</span>
                </div>
            {% endfor %}
            {% for message in app.flashes('error') %}
                <div class="alert alert-error px-4 py-3 rounded relative" role="alert">
                    <strong class="font-bold"><i class="fa-solid fa-xmark"></i></strong>
                    <span class="block sm:inline">{{ message }}</span>
                </div>
            {% endfor %}
            <!-- end flashes -->

        <div>
            <label for="email" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Email</label>
            {{ form_row(form.email) }}
        </div>
        <div>
            <label for="username" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Username</label>
        {{ form_row(form.username) }}
        </div>
        <div>
            <label for="password" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Password</label>
            <a href="{{ path('app_profile_change_password') }}" class="btn btn-accent">Change Password</a>
        </div>
        <div>
            <label for="description" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Description <span class="font-bold">(Supports Markdown !)</span> <span id="descriptionCount" class="text-sm"></span></label>
        {{ form_row(form.description) }}
        </div>
        <div>
            <label for="avatar" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Avatar</label>
            <div class="flex items-center">
                <div class="flex-shrink-0 h-10 w-10">
                    <img class="h-10 w-10 rounded-full" src="{{ asset('/uploads/avatars/' ~ user.avatar) }}" alt="">
                </div>
                {{ form_row(form.avatar) }}
            </div>
        </div>

        <!-- CSRF token -->
        <input type="hidden" name="_csrf_token" value="{{ csrf_token('authenticate') }}">

        <!-- Latitude and longitude linked to the map -->
        {{ form_row(form.latitude) }}
        {{ form_row(form.longitude) }}
        
        <button type="submit" class="btn btn-primary w-full mt-4">Save</button>
        </div>
    </div>

    <!-- MAP -->
    <div class="container mx-auto">
        <div class="bg-white rounded-lg shadow dark:border md:mt-0 xl:p-0 dark:bg-white/10 backdrop-blur-2xl dark:border-gray-700 p-5 md:w-full mx-auto">
            <div class="p-6 space-y-4 md:space-y-6 sm:p-8">
                <h1
                    class="text-xl font-bold leading-tight tracking-tight text-gray-900 md:text-2xl dark:text-white">
                    Edit your location
                </h1>
                <div id="map" style="height: 400px; width: 100%;"></div>
                <div class="w-full bg-slate-500 text-white rounded-lg p-4">
                    <div class="flex space-x-2">
                        <p class="font-bold">Randomize your location ?</p>
                        <input type="checkbox" id="randomize" name="randomize" class="checkbox checkbox-info">
                    </div>
                    <span class="text-sm">This will randomize your initial location on the map for privacy reasons.</span>
                </div>
                <!-- Alert to inform the user to not put his exact address -->
                <div class="alert alert-warning shadow-lg">
                    <div>
                        <svg xmlns="http://www.w3.org/2000/svg" class="stroke-current flex-shrink-0 h-6 w-6" fill="none"
                            viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z" />
                            </svg>
                        <span><span class="font-bold">Don't put your exact address, it's not safe !</span><br>
                        Put your city or a place near you, it will be enough.</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
  </div>
  {{ form_end(form) }}


<script>
    const randomize = document.getElementById('randomize');
    // Initialize and add the map
    const user = { lat: '{{ user.latitude }}', lng: '{{ user.longitude }}' };
    // The map, leaflet, centered at user
    if (user.lat != '' && user.lng != '') {
        var map = L.map('map').setView([user.lat, user.lng], 10);
    } else {
        var map = L.map('map').setView([48.856614, 2.3522219], 10);
    }

    if (user.lat != '' && user.lng != '') {
        document.getElementById('profile_edit_latitude').value = user.lat;
        document.getElementById('profile_edit_longitude').value = user.lng;
    }

    const tiles = L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
        maxZoom: 19,
        attribution: '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>'
    }).addTo(map);

    //add a marker to the map
    if (user.lat != '' && user.lng != '') {
        L.marker([user.lat, user.lng]).addTo(map);
    }

    const marker = L.marker([0, 0], {
        opacity: 0
    }).addTo(map);

    // When the user clicks in the map, get the coordinates and update the input fields
    map.on('click', function(e) {
        document.getElementById('profile_edit_latitude').value = e.latlng.lat;
        document.getElementById('profile_edit_longitude').value = e.latlng.lng;
        //place a marker on the map
        marker.setLatLng(e.latlng);
        marker.setOpacity(1);
    });

    //count the number of characters in the description field of 750 max
    const description = document.getElementById('profile_edit_description');
    const descriptionCount = document.getElementById('descriptionCount');
    description.addEventListener('input', function() {
        descriptionCount.innerHTML = description.value.length + '/750';
        if (description.value.length > 750) {
            descriptionCount.classList.add('text-red-500');
        } else {
            descriptionCount.classList.remove('text-red-500');
        }
    });

    // load the description count on page load
    descriptionCount.innerHTML = description.value.length + '/750';
    if (description.value.length > 750) {
        descriptionCount.classList.add('text-red-500');
    } else {
        descriptionCount.classList.remove('text-red-500');
    }

</script>

{% endblock %}